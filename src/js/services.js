import Colors from './services/colors';
import Flow from './services/flow';
import Openpose from './services/openpose';
import Spectrogram from './services/spectrogram';

const servicesClasses = {
  'colors': Colors,
  'openpose': Openpose,
  'spectrogram': Spectrogram,
  'flow': Flow,
};

class Services {
  constructor(data) {
    /**
     * Services dictionnary.
     * @type {Object}
     * @private
     */
    this.services_ = {};
  }

  /**
   * Setup the services from loaded data.
   * @param {Object} data - The data object generated by the Loader.
   * @private
   */
  setup(data) {
    for (let s in data) {
      if (s in servicesClasses) {
        this.services_[s] = new servicesClasses[s](data[s]);
      }
    }
  }

  /**
   * Return the service.
   * @param  {String} serviceName The name of the service.
   * @return {Service}            A Service object.
   */
  get(serviceName) {
    return this.services_[serviceName];
  }

  /**
   * Returns services frame
   * @param  {Integer} frameNum The frame number
   * @return {Object}           The service object for each frame.
   */
  getFrame(frameNum) {
    const frame = {frame: frameNum};
    for (let service in this.services_) {
      frame[service] = this.services_[service].getFrame(frameNum);
    }
    return frame;
  }
}

module.exports = Services;
